{-# OPTIONS --type-in-type #-}
module chu where
open import functors
open import prelude
                 
record Chu : Set where
  constructor _,_!_
  field
    _‚Å∫ _‚Åª : Set
    _Œ©_ : _‚Å∫ ‚Üí _‚Åª ‚Üí Set

module _ (A@(A‚Å∫ , A‚Åª ! _Œ©‚ÇÅ_) B@(B‚Å∫ , B‚Åª ! _Œ©‚ÇÇ_) : Chu) where
    record Chu[_,_] :  Set where -- Morphisms of chu spaces
      constructor _‚Üî_!_
      field
        to : A‚Å∫ ‚Üí B‚Å∫
        from : B‚Åª ‚Üí A‚Åª
        adj : ‚àÄ a‚Å∫ b‚Åª ‚Üí to a‚Å∫ Œ©‚ÇÇ b‚Åª ‚â° a‚Å∫ Œ©‚ÇÅ from b‚Åª
module _ {A@(A‚Å∫ , A‚Åª ! _Œ©‚ÇÅ_)
          B@(B‚Å∫ , B‚Åª ! _Œ©‚ÇÇ_)
          C@(C‚Å∫ , C‚Åª ! _Œ©‚ÇÉ_) : Chu}
         (F@(f  ‚Üî f·µó ! _‚Ä†‚ÇÅ_) : Chu[ A , B ])
         (G@(g  ‚Üî g·µó ! _‚Ä†‚ÇÇ_) : Chu[ B , C ]) where
    adj-comp : ‚àÄ a‚Å∫ c‚Åª ‚Üí (g ‚àò f) a‚Å∫ Œ©‚ÇÉ c‚Åª ‚â° a‚Å∫ Œ©‚ÇÅ (f·µó ‚àò g·µó) c‚Åª
    adj-comp a‚Å∫ c‚Åª = trans (f a‚Å∫ ‚Ä†‚ÇÇ    c‚Åª)  -- g (f a‚Å∫) Œ©‚ÇÉ        c‚Åª
                           (  a‚Å∫ ‚Ä†‚ÇÅ g·µó c‚Åª)  --    f a‚Å∫  Œ©‚ÇÇ     g·µó c‚Åª
                                            --      a‚Å∫  Œ©‚ÇÅ f·µó (g·µó c‚Åª)
    chu-comp : Chu[ A , C ]
    chu-comp = (g ‚àò f) ‚Üî (f·µó ‚àò g·µó) ! adj-comp

instance
    chu-cat : Category Chu[_,_]
    chu-cat = ùíæ: (id ‚Üî id ! Œª _ _ ‚Üí refl)
              ‚ñ∏: chu-comp
              ùíæ‚ñ∏: (Œª (_ ‚Üî _ ! _‚Ä†_) ‚Üí (Œª x ‚Üí _ ‚Üî _ ! x) ‚ü®$‚ü©
                    extensionality2 Œª a‚Å∫ b‚Åª ‚Üí trans-refl (a‚Å∫ ‚Ä† b‚Åª))
              ‚ñ∏ùíæ: (Œª _ ‚Üí refl)
